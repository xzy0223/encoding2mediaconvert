# Mapping rules for Encoding.com to AWS MediaConvert conversion with iteration rules
rules:
  # Parameters that don't need conversion but need to be recorded as processed
  - source:
      path: "VCodecParameters"
      type: "dummy"  # dummy type to indicate no actual conversion needed
  
  - source:
      path: "acbr"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "add_audio_only"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "clipmode"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "closed_captions.cc_extract_before"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "closed_captions.direct_copy"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "closed_captions.get_from_manifest"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "closed_captions.ignore_cc_absence"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "closed_captions.role"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "closed_captions.vtt_split_segments"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "drm"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "encoder"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "encryption"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  # Audio selector settings - using iteration for multiple alternate_source elements
  - source:
      path: "alternate_source"
      type: "iteration"
      rules:
        - source:
            path: "audio_name"
            type: "string"
          target:
            path: "CustomLanguageCode"
            
        - source:
            path: "language"
            type: "string"
          target:
            path: "LanguageCode"
            transform: "language_code_format"
    target_base_path: "Settings.Inputs[0].AudioSelectors"
    key_format: "Audio Selector {index}"
  
  # Output format mapping with array targets
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "advanced_dash"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "CMAF_GROUP_SETTINGS"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "advanced_fmp4"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "CMAF_GROUP_SETTINGS"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "advanced_hls"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "CMAF_GROUP_SETTINGS"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "flv"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "FILE_GROUP_SETTINGS"
      - path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Container"
        value: "F4V"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "fmp4_hls"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "HLS_GROUP_SETTINGS"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "ipad_stream"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "FILE_GROUP_SETTINGS"
      - path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Container"
        value: "MOV"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "iphone"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "FILE_GROUP_SETTINGS"
      - path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Container"
        value: "MOV"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "mov"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "FILE_GROUP_SETTINGS"
      - path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Container"
        value: "MOV"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "mp4"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "FILE_GROUP_SETTINGS"
      - path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Container"
        value: "MP4"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "mpeg_dash"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "DASH_ISO_GROUP_SETTINGS"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "mpegts"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "FILE_GROUP_SETTINGS"
      - path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Container"
        value: "M2TS"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "smooth_streaming"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "MS_SMOOTH_GROUP_SETTINGS"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "webm"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "FILE_GROUP_SETTINGS"
      - path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Container"
        value: "WEBM"
  # Segment duration for streaming formats - CMAF
  - source:
      path: "segment_duration"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].OutputGroupSettings.CmafGroupSettings.SegmentLength"
      condition:
        source_path: "output"
        operator: "in"
        value: ["advanced_hls", "advanced_dash", "advanced_fmp4"]
        
  # Segment duration for streaming formats - HLS
  - source:
      path: "segment_duration"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].OutputGroupSettings.HlsGroupSettings.SegmentLength"
      condition:
        source_path: "output"
        operator: "eq"
        value: "fmp4_hls"
        
  # Segment duration for streaming formats - DASH
  - source:
      path: "segment_duration"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].OutputGroupSettings.DashIsoGroupSettings.SegmentLength"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mpeg_dash"

  # Single output video settings (for MP4)
  - source:
      path: "video_codec"
      type: "string"
      default: "libx264"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.Codec"
      transform: "video_codec_format"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
        
  # Add CMAF segment length settings
  - source:
      path: "segment_duration"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].OutputGroupSettings.CmafGroupSettings.SegmentLength"
      condition:
        source_path: "output"
        operator: "in"
        value: ["advanced_hls", "advanced_dash", "advanced_fmp4"]
      
  - source:
      path: "framerate"
      type: "number"
      default: 30
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateNumerator"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
      
  - source:
      path: "framerate"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateDenominator"
      value: 1
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
      
  - source:
      path: "framerate"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateControl"
      value: "SPECIFIED"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
      
  # Resolution
  - source:
      path: "size"
      type: "string"
      regex: "(\\d+)x(\\d+)"
      default: "1280x720"
    target:
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.Width"
        value: "$1"
        condition:
          source_path: "output"
          operator: "eq"
          value: "mp4"
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.Height"
        value: "$2"
        condition:
          source_path: "output"
          operator: "eq"
          value: "mp4"
        
  # Video bitrate
  - source:
      path: "bitrate"
      type: "string"
      regex: "(\\d+)k"
      default: "2000k"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.Bitrate"
      value: "$1000"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
      
  # CBR/VBR mode
  - source:
      path: "cbr"
      type: "string"
      default: "no"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.RateControlMode"
      transform: "rate_control_mode"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
      
  # Audio codec
  - source:
      path: "audio_codec"
      type: "string"
      default: "libfaac"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.Codec"
      transform: "audio_codec_format"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
      
  # Audio bitrate
  - source:
      path: "audio_bitrate"
      type: "string"
      regex: "(\\d+)k"
      default: "128k"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.AacSettings.Bitrate"
      value: "$1000"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
      
  # Audio sample rate
  - source:
      path: "audio_sample_rate"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.AacSettings.SampleRate"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
      
  # Audio normalization
  - source:
      path: "loudnorm"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].AudioNormalizationSettings.TargetLkfs"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
      
  # Audio normalization peak
  - source:
      path: "loudnorm_peak"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].AudioNormalizationSettings.TruePeakLimiterThreshold"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"

  # Profile setting
  - source:
      path: "profile"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.Profile"
      transform: "profile_format"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"

  # 处理H.264 level参数
  - source:
      path: "video_codec_parameters.level"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.Level"
      transform: "h264_level_format"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"

  # 处理色彩空间参数
  - source:
      path: "video_codec_parameters.color_primaries"
      type: "number"
      condition:
        operator: "eq"
        value: 1
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.ColorSpace"
      value: "REC_709"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"

  # 处理色彩范围参数
  - source:
      path: "video_codec_parameters.color_range"
      type: "number"
      condition:
        operator: "eq"
        value: 1
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.ColorMetadata"
      value: "INSERT"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
        
  # 处理时间码参数
  - source:
      path: "apply_timecode"
      type: "string"
      default: "no"
    target:
      path: "Settings.TimecodeConfig.Source"
      transform: "timecode_source_format"
      
  # 处理音频通道数参数
  - source:
      path: "audio_channels_number"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.AacSettings.CodingMode"
      transform: "audio_channels_format"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
        
  # 处理音频最大码率参数
  - source:
      path: "audio_maxrate"
      type: "string"
      regex: "(\\d+)k"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.AacSettings.Bitrate"
      value: "$1000"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
        
  # 处理音频归一化参数
  - source:
      path: "audio_normalization"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].AudioNormalizationSettings.TargetLkfs"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
        
  # 处理音频流布局参数
  - source:
      path: "audio_stream.layout"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.AacSettings.CodingMode"
      transform: "audio_layout_format"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
        
  # 处理音频同步参数
  - source:
      path: "audio_sync"
      type: "string"
    target:
      path: "Settings.Inputs[0].AudioSelectors.Audio Selector 1.AudioDurationCorrection"
      transform: "audio_sync_format"
      
  # 处理音频音量参数
  - source:
      path: "audio_volume"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].AudioNormalizationSettings.TargetLkfs"
      transform: "audio_volume_format"
      condition:
        source_path: "audio_normalization"
        operator: "exists"
        value: false
        
  # 处理恒定平均码率参数
  - source:
      path: "cabr"
      type: "string"
      default: "no"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.RateControlMode"
      transform: "cabr_format"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
        
  # 处理字幕时间偏移参数
  - source:
      path: "closed_captions.add_source_offset"
      type: "string"
      condition:
        operator: "ne"
        value: "no"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.SccDestinationSettings.TimeDelta"
      value: 0
      
  # 处理字幕CEA数据字段参数
  - source:
      path: "closed_captions.cea_data_field"
      type: "string"
      condition:
        operator: "ne"
        value: "0"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.CaptionDestinationSettings.CeaDestinationSettings.CeaField"
      transform: "cea_field_format"
      
  # 处理字幕CEA流参数
  - source:
      path: "closed_captions.cea_stream"
      type: "string"
      condition:
        operator: "ne"
        value: "auto"
    target:
      path: "Settings.Inputs[0].CaptionSelectors.CaptionSelector.SourceSettings.AncillarySourceSettings.SourceAncillaryChannelNumber"
      
  # 处理字幕复制参数
  - source:
      path: "closed_captions.copy"
      type: "string"
      condition:
        operator: "eq"
        value: "yes"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.DestinationType"
      value: "EMBEDDED"
      
  # 处理字幕字体大小参数
  - source:
      path: "closed_captions.font_size"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.BurninDestinationSettings.FontSize"
      
  # 处理字幕字体源参数
  - source:
      path: "closed_captions.font_source"
      type: "string"
    target:
      - path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.BurninDestinationSettings.FontFileRegular"
      - path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.DestinationType"
        value: "BURN_IN"
        
  # 处理字幕混合类型参数
  - source:
      path: "closed_captions.mux_type"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.DestinationType"
      transform: "caption_mux_type_format"
      
  # 处理字幕背景透明度参数
  - source:
      path: "closed_captions.transparent_background"
      type: "string"
      condition:
        operator: "eq"
        value: "no"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.BurninDestinationSettings.BackgroundOpacity"
      value: 255
      
  # 处理去交错参数
  - source:
      path: "deinterlacing"
      type: "string"
    target:
      path: "Settings.Inputs[0].DeblockFilter"
      transform: "deinterlacing_format"
      
  # 处理输出目标路径参数
  - source:
      path: "destination"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].OutputGroupSettings.FileGroupSettings.Destination"
      value: "S3_OUTPUT_URL"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mp4"
        
  # 处理对白标准化阈值参数
  - source:
      path: "dialnorm_threshold"
      type: "number"
      condition:
        operator: "exists"
        value: true
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.Ac3Settings.Dialnorm"
      
  # 处理音频下混模式参数
  - source:
      path: "downmix_mode"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.AacSettings.CodingMode"
      transform: "downmix_mode_format"

  # Multi-stream handling with iteration (for HLS/DASH)
  - source:
      path: "stream"
      type: "iteration"
      rules:
        # Video settings
        - source:
            path: "size"
            type: "string"
            regex: "(\\d+)x(\\d+)"
          target:
            - path: "VideoDescription.Width"
              value: "$1"
            - path: "VideoDescription.Height"
              value: "$2"
            
        - source:
            path: "bitrate"
            type: "string"
            regex: "(\\d+)k"
          target:
            path: "VideoDescription.CodecSettings.H264Settings.Bitrate"
            value: "$1000"
            
        - source:
            path: "framerate"
            type: "number"
            default: 30
          target:
            path: "VideoDescription.CodecSettings.H264Settings.FramerateNumerator"
            
        - source:
            path: "framerate"
            type: "number"
          target:
            path: "VideoDescription.CodecSettings.H264Settings.FramerateDenominator"
            value: "1"
            
        - source:
            path: "framerate"
            type: "number"
          target:
            path: "VideoDescription.CodecSettings.H264Settings.FramerateControl"
            value: "SPECIFIED"
            
        - source:
            path: "cbr"
            type: "string"
            default: "no"
          target:
            path: "VideoDescription.CodecSettings.H264Settings.RateControlMode"
            transform: "rate_control_mode"
            
        - source:
            path: "video_codec"
            type: "string"
            default: "libx264"
          target:
            path: "VideoDescription.CodecSettings.Codec"
            transform: "video_codec_format"
            
        - source:
            path: "profile"
            type: "string"
          target:
            path: "VideoDescription.CodecSettings.H264Settings.Profile"
            transform: "profile_format"
            
        # Audio settings
        - source:
            path: "audio_bitrate"
            type: "string"
            regex: "(\\d+)k"
          target:
            path: "AudioDescriptions[0].CodecSettings.AacSettings.Bitrate"
            value: "$1000"
            
        - source:
            path: "audio_sample_rate"
            type: "number"
            default: 48000
          target:
            path: "AudioDescriptions[0].CodecSettings.AacSettings.SampleRate"
            
        - source:
            path: "audio_codec"
            type: "string"
          target:
            path: "AudioDescriptions[0].CodecSettings.Codec"
            transform: "audio_codec_format"
            
        - source:
            path: "audio_channels_number"
            type: "number"
            condition:
              operator: "eq"
              value: 2
          target:
            path: "AudioDescriptions[0].CodecSettings.AacSettings.CodingMode"
            value: "CODING_MODE_2_0"
            
        - source:
            path: "audio_channels_number"
            type: "number"
            condition:
              operator: "eq"
              value: 1
          target:
            path: "AudioDescriptions[0].CodecSettings.AacSettings.CodingMode"
            value: "CODING_MODE_1_0"
            
        # 全局设置，不使用条件判断
        - source:
            path: "dummy"
            type: "string"
            default: "dummy"
          target:
            path: "ContainerSettings.Container"
            value: "M3U8"
              
        - source:
            path: "dummy"
            type: "string"
            default: "dummy"
          target:
            path: "ContainerSettings.M3u8Settings"
            value: {}
              
        - source:
            path: "dummy"
            type: "string"
            default: "dummy"
          target:
            path: "OutputSettings.HlsSettings"
            value: {}
    target_base_path: "Settings.OutputGroups[0].Outputs"
    name_modifier:
      template: "_{size}_{bitrate}"
      replacements:
        "bitrate": 
          regex: "(\\d+)k"
          format: "$1K"
        "size":
          regex: "(\\d+)x(\\d+)"
          format: "$1x$2"

# Transformation functions
transformers:
  output_group_type:
    "mp4": "FILE_GROUP_SETTINGS"
    "advanced_hls": "CMAF_GROUP_SETTINGS"
    "advanced_dash": "CMAF_GROUP_SETTINGS"
    "advanced_fmp4": "CMAF_GROUP_SETTINGS"
    "flv": "FILE_GROUP_SETTINGS"
    "fmp4_hls": "HLS_GROUP_SETTINGS"
    "ipad_stream": "FILE_GROUP_SETTINGS"
    "iphone": "FILE_GROUP_SETTINGS"
    "mov": "FILE_GROUP_SETTINGS"
    "mpeg_dash": "DASH_ISO_GROUP_SETTINGS"
    "mpegts": "FILE_GROUP_SETTINGS"
    "smooth_streaming": "MS_SMOOTH_GROUP_SETTINGS"
    "webm": "FILE_GROUP_SETTINGS"
    "wmv": "FILE_GROUP_SETTINGS"
    
  container_format:
    "mp4": "MP4"
    "mov": "MOV"
    "mxf": "MXF"
    "advanced_hls": "M3U8"
    "advanced_dash": "MPD"
    "flv": "F4V"
    "mpegts": "M2TS"
    "webm": "WEBM"
    "ipad_stream": "MOV"
    "iphone": "MOV"
    
  video_codec_format:
    "libx264": "H_264"
    "libx265": "H_265"
    "vp9": "VP9"
    
  audio_codec_format:
    "libfaac": "AAC"
    "dolby_aac": "AAC"
    "dolby_heaac": "AAC"
    "dolby_heaacv2": "AAC"
    "wmav2": "AAC"
    "libmp3lame": "MP3"
    "ac3": "AC3"
    "libvorbis": "VORBIS"
    "mp2": "MP2"
    
  rate_control_mode:
    "yes": "CBR"
    "no": "QVBR"
    
  profile_format:
    "main": "MAIN"
    "high": "HIGH"
    "baseline": "BASELINE"
    
  h264_level_format:
    "10": "LEVEL_1"
    "11": "LEVEL_1_1"
    "12": "LEVEL_1_2"
    "13": "LEVEL_1_3"
    "20": "LEVEL_2"
    "21": "LEVEL_2_1"
    "22": "LEVEL_2_2"
    "30": "LEVEL_3"
    "31": "LEVEL_3_1"
    "32": "LEVEL_3_2"
    "40": "LEVEL_4"
    "41": "LEVEL_4_1"
    "42": "LEVEL_4_2"
    "50": "LEVEL_5"
    "51": "LEVEL_5_1"
    "52": "LEVEL_5_2"
    
  language_code_format:
    "es": "SPA"
    "fr": "FRA"
    "en": "ENG"
    "de": "DEU"
    "it": "ITA"
    "ja": "JPN"
    "ko": "KOR"
    "pt": "POR"
    "ru": "RUS"
    "zh": "CHI"
    
  timecode_source_format:
    "no": "ZEROBASED"
    "yes": "EMBEDDED"
    
  audio_channels_format:
    "1": "CODING_MODE_1_0"
    "2": "CODING_MODE_2_0"
    "6": "CODING_MODE_5_1"
    
  audio_layout_format:
    "5.1": "CODING_MODE_5_1"
    
  audio_sync_format:
    "1": "AUTO"
    "": "AUTO"
    
  cabr_format:
    "no": "QVBR"
    
  cea_field_format:
    "1": "CEA_FIELD_1"
    "2": "CEA_FIELD_2"
    
  caption_mux_type_format:
    "dvb": "DVB_SUB"
    "webvtt": "WEBVTT"
    
  deinterlacing_format:
    "yes": "ENABLED"
    "no": "DISABLED"
    "auto": "ENABLED"
    
  downmix_mode_format:
    "pl2": "CODING_MODE_2_0"
