# Mapping rules for Encoding.com to AWS MediaConvert conversion with iteration rules
rules:
  # Parameters that don't need conversion but need to be recorded as processed
  - source:
      path: "VCodecParameters"
      type: "dummy"  # dummy type to indicate no actual conversion needed
  
  - source:
      path: "acbr"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "add_audio_only"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "clipmode"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "closed_captions.cc_extract_before"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "closed_captions.direct_copy"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "closed_captions.get_from_manifest"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "closed_captions.ignore_cc_absence"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "closed_captions.role"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "closed_captions.vtt_split_segments"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "drm"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "encoder"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "encryption"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "hint"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "pix_format"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "set_video_duration"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "strip_chapters"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "video_codec_parameters.cmp"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "video_codec_parameters.code"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "video_codec_parameters.flags"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "video_codec_parameters.flags2"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "video_codec_parameters.i_qfactor"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "video_codec_parameters.mbtree"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "video_codec_parameters.me_method"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "video_codec_parameters.me_range"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "video_codec_parameters.qcomp"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "video_codec_parameters.qdiff"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "video_codec_parameters.subq"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "video_codec_parameters.trellis"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "video_codec_parameters.qmax"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  - source:
      path: "video_codec_parameters.qmin"
      type: "dummy"  # dummy type to indicate no actual conversion needed

  - source:
      path: "closed_captions.forced"
      type: "dummy" 

  - source:
      path: "file_extension"
      type: "dummy" 

  - source:
      path: "rotate"
      type: dummy
      condition:
        operator: "eq"
        value: "def"

  # 处理视频旋转参数
  - source:
      path: "set_rotate"
      type: "string"
    target:
      path: "Settings.Inputs[0].VideoSelector.Rotate"
      transform: "rotate_format"

      
  # 处理时间码轨道参数
  - source:
      path: "timecode_track"
      type: "string"
      condition:
        operator: "eq"
        value: "yes"
    target:
      path: "Settings.TimecodeConfig.Source"
      transform: "timecode_track_format"

  - source:
      path: "two_pass"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.QualityTuningLevel"
      transform: "two_pass_format"

        
  # 处理metadata_copy参数
  - source:
      path: "metadata_copy"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  # 处理视频色彩原色参数
  - source:
      path: "video_codec_parameters.color_primaries"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.VideoPreprocessors.ColorCorrector.ColorSpaceConversion"
      transform: "color_primaries_format"

        
  # 处理视频色彩范围参数
  - source:
      path: "video_codec_parameters.color_range"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.VideoPreprocessors.ColorCorrector.ColorSpaceConversion"
      transform: "color_range_format"

        
  # 处理视频色彩矩阵参数
  - source:
      path: "video_codec_parameters.colormatrix"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.VideoPreprocessors.ColorCorrector.ColorSpaceConversion"
      transform: "color_matrix_format"

        
  # 处理视频色彩原色参数(colorprim)
  - source:
      path: "video_codec_parameters.colorprim"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.VideoPreprocessors.ColorCorrector.ColorSpaceConversion"
      transform: "color_prim_format"

        
  # 处理视频传输特性参数
  - source:
      path: "video_codec_parameters.transfer"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.VideoPreprocessors.ColorCorrector.ColorSpaceConversion"
      transform: "transfer_format"

        
  # 处理视频传输特性参数(transfer_characteristics)
  - source:
      path: "video_codec_parameters.transfer_characteristics"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  # 处理视频矩阵系数参数
  - source:
      path: "video_codec_parameters.matrix_coefficients"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.VideoPreprocessors.ColorCorrector.ColorSpaceConversion"
      transform: "matrix_coefficients_format"

        
  # 处理视频分区参数
  - source:
      path: "video_codec_parameters.partitions"
      type: "dummy"  # dummy type to indicate no actual conversion needed
      
  # 处理视频B帧参数
  - source:
      path: "video_codec_parameters.bf"
      type: "number"
      condition:
        operator: "lte"
        value: 7
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.NumberBFramesBetweenReferenceFrames"

        
  # 处理字幕CEA数据字段参数
  - source:
      path: "closed_captions.cea_data_field"
      type: "dummy"  # dummy type to indicate no actual conversion needed

  - source:
      path: "loudnorm_range"
      type: "dummy"  # 基于目前的统计，无需处理
      
  # Audio selector settings - using iteration for multiple alternate_source elements
  - source:
      path: "alternate_source"
      type: "iteration"
      rules:
        - source:
            path: "audio_name"
            type: "string"
          target:
            path: "CustomLanguageCode"
            
        - source:
            path: "language"
            type: "string"
          target:
            path: "LanguageCode"
            transform: "language_code_format"
    target_base_path: "Settings.Inputs[0].AudioSelectors"
    key_format: "Audio Selector {index}"
  
  # Output format mapping with array targets
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "advanced_dash"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "CMAF_GROUP_SETTINGS"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "advanced_fmp4"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "CMAF_GROUP_SETTINGS"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "advanced_hls"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "CMAF_GROUP_SETTINGS"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "flv"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "FILE_GROUP_SETTINGS"
      - path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Container"
        value: "F4V"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "fmp4_hls"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "HLS_GROUP_SETTINGS"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "ipad_stream"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "FILE_GROUP_SETTINGS"
      - path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Container"
        value: "MOV"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "iphone"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "FILE_GROUP_SETTINGS"
      - path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Container"
        value: "MOV"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "mov"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "FILE_GROUP_SETTINGS"
      - path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Container"
        value: "MOV"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "mp4"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "FILE_GROUP_SETTINGS"
      - path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Container"
        value: "MP4"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "mpeg_dash"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "DASH_ISO_GROUP_SETTINGS"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "mpegts"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "FILE_GROUP_SETTINGS"
      - path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Container"
        value: "M2TS"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "smooth_streaming"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "MS_SMOOTH_GROUP_SETTINGS"
        
  - source:
      path: "output"
      type: "string"
      condition:
        operator: "eq"
        value: "webm"
    target:
      - path: "Settings.OutputGroups[0].OutputGroupSettings.Type"
        value: "FILE_GROUP_SETTINGS"
      - path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Container"
        value: "WEBM"
  # Segment duration for streaming formats - CMAF
  - source:
      path: "segment_duration"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].OutputGroupSettings.CmafGroupSettings.SegmentLength"
      condition:
        source_path: "output"
        operator: "in"
        value: ["advanced_hls", "advanced_dash", "advanced_fmp4"]
        
  # Segment duration for streaming formats - HLS
  - source:
      path: "segment_duration"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].OutputGroupSettings.HlsGroupSettings.SegmentLength"
      condition:
        source_path: "output"
        operator: "eq"
        value: "fmp4_hls"
        
  # Segment duration for streaming formats - DASH
  - source:
      path: "segment_duration"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].OutputGroupSettings.DashIsoGroupSettings.SegmentLength"
      condition:
        source_path: "output"
        operator: "eq"
        value: "mpeg_dash"

  # Single output video settings (for MP4)
  - source:
      path: "video_codec"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.Codec"
      transform: "video_codec_format"

        
  # Add CMAF segment length settings
  - source:
      path: "segment_duration"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].OutputGroupSettings.CmafGroupSettings.SegmentLength"
      condition:
        source_path: "output"
        operator: "in"
        value: ["advanced_hls", "advanced_dash", "advanced_fmp4"]
      
  # 处理帧率参数
  - source:
      path: "framerate"
      type: "string"
      condition:
        operator: "eq"
        value: "24000/1001"
    target:
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateControl"
        value: "SPECIFIED"
        condition:
          source_path: "output"
          operator: "eq"
          value: "mp4"
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateNumerator"
        value: 24000
        condition:
          source_path: "output"
          operator: "eq"
          value: "mp4"
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateDenominator"
        value: 1001
        condition:
          source_path: "output"
          operator: "eq"
          value: "mp4"
          
  - source:
      path: "framerate"
      type: "number"
      condition:
        operator: "eq"
        value: 29.97
    target:
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateControl"
        value: "SPECIFIED"
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateNumerator"
        value: 30000
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateDenominator"
        value: 1001
          
  - source:
      path: "framerate"
      type: "number"
      condition:
        operator: "eq"
        value: 59.94
    target:
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateControl"
        value: "SPECIFIED"
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateNumerator"
        value: 60000
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateDenominator"
        value: 1001
          
  # 处理帧率参数 - 修复版本
  - source:
      path: "framerate"
      type: "number"
      condition:
        operator: "eq"
        value: 25
    target:
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateControl"
        value: "SPECIFIED"
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateNumerator"
        value: 25
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateDenominator"
        value: 1
          
  - source:
      path: "framerate"
      type: "number"
      condition:
        operator: "eq"
        value: 30
    target:
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateControl"
        value: "SPECIFIED"
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateNumerator"
        value: 30
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateDenominator"
        value: 1
          
  - source:
      path: "framerate"
      type: "string"
      condition:
        operator: "eq"
        value: ""
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateControl"
      value: "INITIALIZE_FROM_SOURCE"
        
  # Resolution
  - source:
      path: "size"
      type: "string"
      regex: "(\\d+)x([1-9]\\d*)"
    target:
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.Width"
        value: "$1"
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.Height"
        value: "$2"
          
  # 处理特殊情况：宽度固定，高度自动
  - source:
      path: "size"
      type: "string"
      regex: "(\\d+)x0"
    target:
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.Width"
        value: "$1"
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.ScalingBehavior"
        value: "DEFAULT"
        
      
  # CBR/VBR mode
  - source:
      path: cbr
      condition:
        operator: AND
        conditions:
          - operator: eq
            value: "no"  # 检查 cbr=no
          - operator: AND
            conditions:
              - operator: exists
                source_path: cabr  # 检查 cabr 参数存在
              - operator: eq
                source_path: cabr
                value: "no"  # 检查 cabr=no
    target:
      path: Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.RateControlMode
      value: VBR

  - source:
      path: cbr
      condition:
        operator: AND
        conditions:
          - operator: eq
            value: "no"  # 检查 cbr=no
          - operator: AND
            conditions:
              - operator: exists
                source_path: cabr  # 检查 cabr 参数存在
              - operator: eq
                source_path: cabr
                value: "yes"  # 检查 cabr=no
    target:
      path: Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.RateControlMode
      value: QVBR

  - source:
      path: cbr
      condition:
        operator: AND
        conditions:
          - operator: eq
            value: "no"  # 检查 cbr=no
          - operator: NOT
            condition:
              operator: exists
              source_path: cabr  # 检查 cabr 参数存在
    target:
      path: Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.RateControlMode
      value: VBR

  - source:
      path: cbr
      condition:
        operator: eq
        value: "yes"
    target:
      path: Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.RateControlMode
      value: CBR

  # Video bitrate
  - source:
      path: "bitrate"
      type: "string"
      regex: "(\\d+)k"
      condition:
        operator: AND
        conditions:
          - operator: eq
            source_path: cbr
            value: "no"  # 检查 cbr=no
          - operator: AND
            conditions:
              - operator: exists
                source_path: cabr  # 检查 cabr 参数存在
              - operator: eq
                source_path: cabr
                value: "no"  # 检查 cabr=no
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.Bitrate"
      value: "$1000"

  - source:
      path: "bitrate"
      type: "string"
      regex: "(\\d+)k"
      condition:
        operator: AND
        conditions:
          - operator: eq
            source_path: cbr
            value: "no"  # 检查 cbr=no
          - operator: AND
            conditions:
              - operator: exists
                source_path: cabr  # 检查 cabr 参数存在
              - operator: eq
                source_path: cabr
                value: "yes"  # 检查 cabr=no
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.MaxBitrate"
      value: "$1000"

  - source:
      path: "bitrate"
      type: "string"
      regex: "(\\d+)k"
      condition:
        operator: AND
        conditions:
          - operator: eq
            source_path: cbr
            value: "no"  # 检查 cbr=no
          - operator: NOT
            condition:
              operator: exists
              source_path: cabr  # 检查 cabr 参数存在
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.Bitrate"
      value: "$1000"

  - source:
      path: "bitrate"
      type: "string"
      regex: "(\\d+)k"
      condition:
        operator: eq
        source_path: hard_cbr
        value: "yes"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.Bitrate"
      value: "$1000"

  - source:
      path: "bitrate"
      type: "string"
      regex: "(\\d+)k"
      condition:
        operator: eq
        source_path: cbr
        value: "yes"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.Bitrate"
      value: "$1000"

  # Audio codec
  - source:
      path: "audio_codec"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.Codec"
      transform: "audio_codec_format"
      
  # Audio bitrate
  - source:
      path: "audio_bitrate"
      type: "string"
      regex: "(\\d+)k"
      default: "128k"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.AacSettings.Bitrate"
      value: "$1000"
      
  # Audio sample rate
  - source:
      path: "audio_sample_rate"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.AacSettings.SampleRate"

  # 处理音频通道数参数
  - source:
      path: "audio_channels_number"
      type: "number"
      condition:
        source_path: "audio_codec"
        operator: "in"
        value: ["dolby_aac", "dolby_heaac", "libfaac"]
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.AacSettings.CodingMode"
      transform: "audio_channels_format"

  - source:
      path: "audio_channels_number"
      type: "number"
      condition:
        source_path: "audio_codec"
        operator: "eq"
        value: "ac3"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.Ac3Settings.CodingMode"
      transform: "audio_channels_ac3_format"
        
  # 处理音频最大码率参数
  - source:
      path: "audio_maxrate"
      type: "string"
      regex: "(\\d+)k"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.AacSettings.Bitrate"
      value: "$1000"
      
  # 处理音频下混模式参数
  - source:
      path: "downmix_mode"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.AacSettings.CodingMode"
      transform: "downmix_mode_format"

  # 处理音频流布局参数
  - source:
      path: "audio_stream.layout"
      type: "string"
      condition:
        source_path: "audio_codec"
        operator: "in"
        value: ["dolby_aac", "dolby_heaac", "libfaac"]
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.AacSettings.CodingMode"
      transform: "audio_layout_format"

  - source:
      path: "audio_stream.layout"
      type: "string"
      condition:
        source_path: "audio_codec"
        operator: "eq"
        value: "ac3"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.Ac3Settings.CodingMode"
      transform: "audio_layout_format_ac3"


  # 处理对白标准化阈值参数
  - source:
      path: "dialnorm_threshold"
      type: "number"
      condition:
        source_path: "audio_codec"
        operator: "eq"
        value: "ac3"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].CodecSettings.Ac3Settings.Dialnorm"
      
  # Audio normalization
  - source:
      path: "loudnorm"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].AudioNormalizationSettings.TargetLkfs"

      
  # Audio normalization peak
  - source:
      path: "loudnorm_peak"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].AudioNormalizationSettings.TruePeakLimiterThreshold"


  # 处理色彩范围参数
  - source:
      path: "video_codec_parameters.color_range"
      type: "number"
      condition:
        operator: "eq"
        value: 1
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.ColorMetadata"
      value: "INSERT"
        
  # 处理时间码参数
  - source:
      path: "apply_timecode"
      type: "string"
      default: "no"
    target:
      path: "Settings.TimecodeConfig.Source"
      transform: "timecode_source_format"
      
        
  # 处理音频归一化参数
  - source:
      path: "audio_normalization"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].AudioNormalizationSettings.TargetLkfs"


        
  # 处理音频同步参数
  - source:
      path: "audio_sync"
      type: "string"
    target:
      path: "Settings.Inputs[0].AudioSelectors.Audio Selector 1.AudioDurationCorrection"
      transform: "audio_sync_format"
      
  # 处理音频音量参数
  - source:
      path: "audio_volume"
      type: "number"
      condition:
        operator: NOT
        condition:
          source_path: "audio_normalization"
          operator: "exists"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].AudioNormalizationSettings.TargetLkfs"
      transform: "audio_volume_format"

        
  # 处理恒定平均码率参数
  - source:
      path: "cabr"
      type: "string"
      default: "no"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.RateControlMode"
      transform: "cabr_format"
        
  # 处理字幕时间偏移参数
  - source:
      path: "closed_captions.add_source_offset"
      type: "string"
      condition:
        operator: "ne"
        value: "no"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.SccDestinationSettings.TimeDelta"
      value: 0
      
  # 处理字幕CEA数据字段参数
  - source:
      path: "closed_captions.cea_data_field"
      type: "string"
      condition:
        operator: "ne"
        value: "0"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.CaptionDestinationSettings.CeaDestinationSettings.CeaField"
      transform: "cea_field_format"
      
  # 处理字幕CEA流参数
  - source:
      path: "closed_captions.cea_stream"
      type: "string"
      condition:
        operator: "ne"
        value: "auto"
    target:
      path: "Settings.Inputs[0].CaptionSelectors.CaptionSelector.SourceSettings.AncillarySourceSettings.SourceAncillaryChannelNumber"
      
  # 处理字幕复制参数
  - source:
      path: "closed_captions.copy"
      type: "string"
      condition:
        operator: "eq"
        value: "yes"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.DestinationType"
      value: "EMBEDDED"
      
  # 处理字幕字体大小参数
  - source:
      path: "closed_captions.font_size"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.BurninDestinationSettings.FontSize"
      
  # 处理字幕字体源参数
  - source:
      path: "closed_captions.font_source"
      type: "string"
    target:
      - path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.BurninDestinationSettings.FontFileRegular"
      - path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.DestinationType"
        value: "BURN_IN"
        
  # 处理字幕混合类型参数
  - source:
      path: "closed_captions.mux_type"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.DestinationType"
      transform: "caption_mux_type_format"
      
  # 处理字幕背景透明度参数
  - source:
      path: "closed_captions.transparent_background"
      type: "string"
      condition:
        operator: "eq"
        value: "no"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].CaptionDescriptions[0].DestinationSettings.BurninDestinationSettings.BackgroundOpacity"
      value: 255
      
  # 处理去交错参数
  - source:
      path: "deinterlacing"
      type: "string"
      condition:
        operator: "in"
        value: ["yes", "auto"]
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.VideoPreprocessors.Deinterlacer"
      value: {}
      
  # 处理输出目标路径参数
  - source:
      path: "destination"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].OutputGroupSettings.FileGroupSettings.Destination"
      value: "S3_OUTPUT_URL"
        
      
  # 处理强制隔行参数
  - source:
      path: "force_interlaced"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.InterlaceMode"
      transform: "force_interlaced_format"
        
  # 处理MP4文件类型参数
  - source:
      path: "ftyp"
      type: "string"
      default: "mp42"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].ContainerSettings.Mp4Settings.Mp4MajorBrand"
      
  # 处理硬CBR参数
  - source:
      path: "hard_cbr"
      type: "string"
      default: "no"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.RateControlMode"
      transform: "hard_cbr_format"
        
  # 处理保持宽高比参数
  - source:
      path: "keep_aspect_ratio"
      type: "string"
      default: "yes"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.ScalingBehavior"
      transform: "keep_aspect_ratio_format"
        
  # 处理关键帧间隔参数
  - source:
      path: "keyframe"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.GopSize"

        
        
  # 处理音频响度模式参数
  - source:
      path: "loudness_mode"
      type: "string"
      condition:
        operator: "ne"
        value: ""
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].AudioNormalizationSettings.Algorithm"
      transform: "loudness_mode_format"

        
  # 处理最大码率参数
  - source:
      path: "maxrate"
      type: "string"
      regex: "(\\d+)k"
      condition:
        source_path: "maxrate"
        operator: "ne"
        value: ""
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.MaxBitrate"
      value: "$1000"

        
  # 处理像素宽高比参数
  - source:
      path: "pixel_aspect_ratio"
      type: "string"
      condition:
        operator: "eq"
        value: "1:1"
    target:
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.ParControl"
        value: "SPECIFIED"
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.ParNumerator"
        value: 1
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.ParDenominator"
        value: 1
          
  - source:
      path: "pixel_aspect_ratio"
      type: "string"
      condition:
        operator: "eq"
        value: "1.77:1"
    target:
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.ParControl"
        value: "SPECIFIED"
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.ParNumerator"
        value: 16
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.ParDenominator"
        value: 9
          
  - source:
      path: "pixel_aspect_ratio"
      type: "string"
      condition:
        operator: "eq"
        value: ""
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.ParControl"
      value: "INITIALIZE_FROM_SOURCE"
        
        
  # 处理turbo参数
  - source:
      path: "turbo"
      type: "string"
      condition:
        operator: "eq"
        value: "yes"
    target:
      path: "AccelerationSettings.Mode"
      value: "ENABLED"

  # 处理twin_turbo参数
  - source:
      path: "twin_turbo"
      type: "string"
      condition:
        operator: "eq"
        value: "yes"
    target:
      path: "AccelerationSettings.Mode"
      value: "ENABLED"
        
  # 处理视频编码器熵编码参数

  - source:
      path: "video_codec_parameters.coder"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.EntropyEncoding"
      transform: "coder_format"
      
  - source:
      path: "video_codec_parameters.coder"
      type: "string"
      condition:
        operator: "AND"
        conditions:
          - operator: "OR"
            conditions:
              - operator: "eq"
                source_path: "level"
                value: 30
              - operator: "eq"
                source_path: "video_codec_parameters.level"
                value: 30
          - operator: "OR"
            conditions:
              - operator: "eq"
                source_path: "profile"
                value: "baseline"
              - operator: "eq"
                source_path: "video_codec_parameters.vprofile"
                value: "baseline"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.EntropyEncoding"
      value: "CAVLC"

        
  # 处理视频编码器直接预测参数
  - source:
      path: "video_codec_parameters.directpred"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.Slices"

        
  # 处理视频编码器GOP大小参数
  - source:
      path: "video_codec_parameters.g"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.GopSize"

        
  # 处理视频编码器关键帧参数
  - source:
      path: "video_codec_parameters.keyframes"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.GopClosedCadence"

        
  # 处理视频编码器最大关键帧间隔参数
  - source:
      path: "video_codec_parameters.keyint_max"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.GopSize"

        
  # 处理视频编码器配置文件参数
  - source:
      path: "video_codec_parameters.profile"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.CodecProfile"
      transform: "profile_format"
        
  # 处理视频编码器vprofile参数
  - source:
      path: "video_codec_parameters.vprofile"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.CodecProfile"
      transform: "profile_format"

  # 处理编码配置文件参数
  - source:
      path: "profile"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.CodecProfile"
      transform: "profile_format"

  - source:
      path: "profile"
      type: "string"
      condition:
        operator: "eq"
        value: "baseline"
    target:
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.CodecProfile"
        value: "BASELINE"
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.EntropyEncoding"
        value: "CAVLC"
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.NumberBFramesBetweenReferenceFrames"
        value: 0

  # 处理视频编码器B帧策略参数
  - source:
      path: "video_codec_parameters.b_strategy"
      type: "number"
      condition:
        operator: "lte"
        value: 7
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.NumberBFramesBetweenReferenceFrames"

        
  # 处理音频峰值限制器阈值参数
  - source:
      path: "prolimiter_max_peak"
      type: "number"
      condition:
        operator: "ne"
        value: ""
    target:
      path: "Settings.OutputGroups[0].Outputs[0].AudioDescriptions[0].AudioNormalizationSettings.TruePeakLimiterThreshold"

        
  # 处理设置宽高比参数
  - source:
      path: "set_aspect_ratio"
      type: "string"
      condition:
        operator: "eq"
        value: "source"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.ParControl"
      value: "INITIALIZE_FROM_SOURCE"

        
  # - source:
  #     path: "set_aspect_ratio"
  #     type: "string"
  #     condition:
  #       operator: "eq"
  #       value: "16:9"
  #   target:
  #     - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.ParControl"
  #       value: "SPECIFIED"
  #     - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.ParNumerator"
  #       value: 16
  #     - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.ParDenominator"
  #       value: 9

# Additional rules
  # 处理视频编码器加权预测参数
  - source:
      path: "video_codec_parameters.wpredp"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.Softness"

        
  # 处理视频编码器最小关键帧间隔参数
  - source:
      path: "video_codec_parameters.keyint_min"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.MinIInterval"

        
  # 处理视频编码器B帧策略参数
  - source:
      path: "video_codec_parameters.b_strategy"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.NumberBFramesBetweenReferenceFrames"

        
  # 处理视频编码器参考帧数量参数
  - source:
      path: "video_codec_parameters.refs"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.NumberReferenceFrames"

  # 处理视频编码器级别参数
  - source:
      path: "video_codec_parameters.level"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.CodecLevel"
      transform: "h264_level_format"

  # 处理H.264编码级别参数
  - source:
      path: "level"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.CodecLevel"
      transform: "level_format"

        
  # 处理视频编码器场景变化检测阈值参数
  - source:
      path: "video_codec_parameters.sc_threshold"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.SceneChangeDetect"
      transform: "sc_threshold_format"

  
  # 处理视频编码器最小关键帧间隔参数
  - source:
      path: "video_codec_parameters.keyint_min"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.MinIInterval"


  # 处理视频编码器参考帧数量参数
  - source:
      path: "video_codec_parameters.refs"
      type: "number"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.NumberReferenceFrames"

  # 处理视频编码器场景变化检测阈值参数
  - source:
      path: "video_codec_parameters.sc_threshold"
      type: "string"
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.SceneChangeDetect"
      transform: "sc_threshold_format"


  # 处理视频同步参数
  - source:
      path: "video_sync"
      type: "string"
      condition:
        operator: "eq"
        value: "cfr"
    target:
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateControl"
        value: "SPECIFIED"
      - path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateConversionAlgorithm"
        value: "DUPLICATE_DROP"

  - source:
      path: "video_sync"
      type: "string"
      condition:
        operator: "in"
        value: ["old", "passthrough"]
    target:
      path: "Settings.OutputGroups[0].Outputs[0].VideoDescription.CodecSettings.H264Settings.FramerateControl"
      value: "INITIALIZE_FROM_SOURCE"


# Transformation functions
  # 处理时间码复制参数
  - source:
      path: "copy_timestamps"
      type: "string"
      condition:
        operator: "eq"
        value: "yes"
    target:
      path: "Settings.TimecodeConfig.Source"
      value: "EMBEDDED"

  - source:
      path: "stream"
      type: "iteration"
      rules:
        # Video settings
        - source:
            path: "size"
            type: "string"
            regex: "(\\d+)x(\\d+)"
          target:
            - path: "VideoDescription.Width"
              value: "$1"
            - path: "VideoDescription.Height"
              value: "$2"            
    target_base_path: "Settings.OutputGroups[0].Outputs"
    name_modifier:
      template: "_{size}_{bitrate}"
      replacements:
        "bitrate": 
          regex: "(\\d+)k"
          format: "$1K"
        "size":
          regex: "(\\d+)x(\\d+)"
          format: "$1x$2"

transformers:
  output_group_type:
    "mp4": "FILE_GROUP_SETTINGS"
    "advanced_hls": "CMAF_GROUP_SETTINGS"
    "advanced_dash": "CMAF_GROUP_SETTINGS"
    "advanced_fmp4": "CMAF_GROUP_SETTINGS"
    "flv": "FILE_GROUP_SETTINGS"
    "fmp4_hls": "HLS_GROUP_SETTINGS"
    "ipad_stream": "FILE_GROUP_SETTINGS"
    "iphone": "FILE_GROUP_SETTINGS"
    "mov": "FILE_GROUP_SETTINGS"
    "mpeg_dash": "DASH_ISO_GROUP_SETTINGS"
    "mpegts": "FILE_GROUP_SETTINGS"
    "smooth_streaming": "MS_SMOOTH_GROUP_SETTINGS"
    "webm": "FILE_GROUP_SETTINGS"
    "wmv": "FILE_GROUP_SETTINGS"
    
  container_format:
    "mp4": "MP4"
    "mov": "MOV"
    "mxf": "MXF"
    "advanced_hls": "M3U8"
    "advanced_dash": "MPD"
    "flv": "F4V"
    "mpegts": "M2TS"
    "webm": "WEBM"
    "ipad_stream": "MOV"
    "iphone": "MOV"
    
  video_codec_format:
    "libx264": "H_264"
    "libx265": "H_265"
    "vp9": "VP9"
    "hevc": "H_264"
    "libvpx": "VP9"
    "mpeg2video": "MPEG2"
    "mpeg4": "H_264"
    "av1": "AV1"
    
  audio_codec_format:
    "libfaac": "AAC"
    "dolby_aac": "AAC"
    "dolby_heaac": "AAC"
    "dolby_heaacv2": "AAC"
    "wmav2": "AAC"
    "libmp3lame": "MP3"
    "ac3": "AC3"
    "libvorbis": "VORBIS"
    "mp2": "MP2"
    
  rate_control_mode:
    "yes": "CBR"
    "no": "VBR"
    
  profile_format:
    "main": "MAIN"
    "high": "HIGH"
    "High": "HIGH"
    "baseline": "BASELINE"
    
  h264_level_format:
    '10': "LEVEL_1"
    '11': "LEVEL_1_1"
    '12': "LEVEL_1_2"
    '13': "LEVEL_1_3"
    '20': "LEVEL_2"
    '21': "LEVEL_2_1"
    '22': "LEVEL_2_2"
    '30': "LEVEL_3"
    '31': "LEVEL_3_1"
    '32': "LEVEL_3_2"
    '4': "LEVEL_4"
    '40': "LEVEL_4"
    '41': "LEVEL_4_1"
    '42': "LEVEL_4_2"
    '50': "LEVEL_5"
    '51': "LEVEL_5_1"
    '52': "LEVEL_5_2"
    
  language_code_format:
    "es": "SPA"
    "fr": "FRA"
    "en": "ENG"
    "de": "DEU"
    "it": "ITA"
    "ja": "JPN"
    "ko": "KOR"
    "pt": "POR"
    "ru": "RUS"
    "zh": "CHI"
    
  timecode_source_format:
    "no": "ZEROBASED"
    "yes": "EMBEDDED"
    
  audio_channels_format:
    "1": "CODING_MODE_1_0"
    "2": "CODING_MODE_2_0"
    "6": "CODING_MODE_5_1"

  audio_channels_ac3_format:
    "1": "CODING_MODE_1_0"
    "2": "CODING_MODE_2_0"
    "6": "CODING_MODE_3_2_LFE"

  audio_layout_format:
    "5.1": "CODING_MODE_5_1"

  audio_layout_format_ac3:
    "5.1": "CODING_MODE_3_2_LFE"
    
  audio_sync_format:
    "1": "AUTO"
    "": "AUTO"
    
  cabr_format:
    "no": "QVBR"
    
  cea_field_format:
    "1": "CEA_FIELD_1"
    "2": "CEA_FIELD_2"
    
  caption_mux_type_format:
    "dvb": "DVB_SUB"
    "webvtt": "WEBVTT"
    
  deinterlacing_format:
    "yes": "ENABLED"
    "no": "DISABLED"
    "auto": "ENABLED"
    
  downmix_mode_format:
    "pl2": "CODING_MODE_2_0"
    
  force_interlaced_format:
    "tff": "TOP_FIELD"
    "no": "PROGRESSIVE"
    
  hard_cbr_format:
    "yes": "CBR"
    "no": "VBR"
    
  keep_aspect_ratio_format:
    "yes": "DEFAULT"
    "no": "STRETCH_TO_OUTPUT"
    
  level_format:
    "30": "LEVEL_3"
    "31": "LEVEL_3_1"
    "32": "LEVEL_3_2"
    "4": "LEVEL_4"
    "40": "LEVEL_4"
    "41": "LEVEL_4_1"
    
  loudness_mode_format:
    "1770-1-di": "ITU_BS_1770_1"
    "1770-2": "ITU_BS_1770_2"
    
    
  coder_format:
    "0": "CABAC"
    "1": "CAVLC"
  
  sc_threshold_format:
    "0": "DISABLED"
    "40": "ENABLED"
    "": "ENABLED"
    
  rotate_format:
    "0": "DEGREE_0"
    "source": "AUTO"
    
  timecode_track_format:
    "yes": "EMBEDDED"

  two_pass_format:
    "yes": "MULTI_PASS_HQ"
    "no": "SINGLE_PASS_HQ"
    
  color_primaries_format:
    "bt709": "FORCE_709"
    "bt601": "FORCE_601"
    "1": "FORCE_709"
    
  color_range_format:
    "1": "FORCE_709"
    
  color_matrix_format:
    "bt709": "FORCE_709"
    "bt601": "FORCE_601"
    
  color_prim_format:
    "bt709": "FORCE_709"
    "bt601": "FORCE_601"
    
  transfer_format:
    "bt709": "FORCE_709"
    "bt601": "FORCE_601"
    
  matrix_coefficients_format:
    "bt709": "FORCE_709"
    "bt601": "FORCE_601"
    "1": "FORCE_709"
  
